//============================================================================================================
//
//
//                  Copyright (c) 2024, Qualcomm Innovation Center, Inc. All rights reserved.
//                              SPDX-License-Identifier: BSD-3-Clause
//
//============================================================================================================
#pragma kernel main

SamplerState       pointClampSampler : register(s0);
RWTexture2D<uint>  Conifer_Upscaler_LumaSink;
RWTexture2D<half4> Conifer_Upscaler_MotionDepthAlphaBufferSink;
Texture2D<float>   _CameraDepthTexture;
Texture2D<half2>   _MotionVectorTexture;
Texture2D<half4>   _CameraColorTexture;
Texture2D<half3>   _CameraOpaqueTexture;

float2 Conifer_Upscaler_RenderSizeRcp;
half   Conifer_Upscaler_PreExposure;

[numthreads(8, 8, 1)]
void main(uint3 id : SV_DispatchThreadID) {
    float2 gatherCoord = id.xy * Conifer_Upscaler_RenderSizeRcp.xy;

    half2 motion = _MotionVectorTexture.SampleLevel(pointClampSampler, gatherCoord, 0);

    int2   InputPosBtmRight = int2(1, 1) + int2(id.xy);
    float  NearestZ         = _CameraDepthTexture.Load(int3(InputPosBtmRight, 0)).x;
    float4 topleft          = _CameraDepthTexture.Gather(pointClampSampler, gatherCoord);
    NearestZ                = min(topleft.w, min(topleft.z, min(topleft.y, min(topleft.x, NearestZ))));

    float2 topRight = _CameraDepthTexture.Gather(pointClampSampler, gatherCoord + float2(Conifer_Upscaler_RenderSizeRcp.x, 0.0)).yz;
    NearestZ        = min(topRight.y, min(topRight.x, NearestZ));

    float2 bottomLeft = _CameraDepthTexture.Gather(pointClampSampler, gatherCoord + float2(0.0, Conifer_Upscaler_RenderSizeRcp.y)).xy;
    NearestZ          = min(bottomLeft.y, min(bottomLeft.x, NearestZ));

    half3 Colorrgb = _CameraColorTexture.Load(int3(id.xy, 0)).xyz;

    float val = max(max(Colorrgb.x, Colorrgb.y), Colorrgb.z) + Conifer_Upscaler_PreExposure;
    Colorrgb /= float3(val, val, val);

    float3 Colorycocg;
    Colorycocg.x = 0.25 * (Colorrgb.x + 2.0 * Colorrgb.y + Colorrgb.z);
    Colorycocg.y = clamp(0.5 * Colorrgb.x + 0.5 - 0.5 * Colorrgb.z, 0.0, 1.0);
    Colorycocg.z = clamp(Colorycocg.x + Colorycocg.y - Colorrgb.x, 0.0, 1.0);

    uint x11 = uint(Colorycocg.x * 2047.5);
    uint y11 = uint(Colorycocg.y * 2047.5);
    uint z10 = uint(Colorycocg.z * 1023.5);

    half3 Colorprergb = _CameraOpaqueTexture.Load(int3(id.xy, 0)).xyz;
    Colorprergb /= max(max(Colorprergb.x, Colorprergb.y), Colorprergb.z) + Conifer_Upscaler_PreExposure;
    half3 delta                   = abs(Colorrgb - Colorprergb);
    Conifer_Upscaler_MotionDepthAlphaBufferSink[id.xy] = float4(motion, NearestZ, 350 * max(delta.x, max(delta.y, delta.z)));
    Conifer_Upscaler_LumaSink[id.xy]              = x11 << 21u | y11 << 10u | z10;
}